{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17420\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 VOSVC_Bounded_SimpleFlatVideo\
- Using the Vision OS Video Component\
- To use the Vision OS Video Component need to Mesh Renderer object\
- There are limitations to using the Vision OS Video Component\
	- https://docs.unity3d.com/Packages/com.unity.polyspatial.visionos@2.2/manual/VideoComponent.html#visionosvideocomponent\
	- The video asset has to be placed in two places\
	- One, Source video asset placed somewhere under the Assets; This asset will be set to the Vision OS Video Component\
	- Two, copied video asset under the \'93Assets/StreamingAssets/VisionOSVideoClips/\'94\
	- e.g. Assets/Video/A.mp4, Assets/StreamingAssets/VisionOSVideoClips/A.mp4\
- The Vision OS Video Component will not work with debugging tools like PlayToDevice\
- Can refer to the \'93Screen\'94 object in this scene\
	- Use Quad mesh\
	- Add Vision OS Video Component to the GameObject\
		- Set the Mesh Renderer and the Video Clip}